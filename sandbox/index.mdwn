[[!meta title="Sandbox"]]
[[!meta description="Page for throwing information temporarily that will be organised later"]]

# Bibliography

- <https://www.pearson.com/us/higher-education/program/Smith-Software-Build-Systems-Principles-and-Experience/PGM105534.html>
- Linkers and Loaders by John R. Levine <https://www.elsevier.com/books/linkers-and-loaders/levine/978-0-08-051031-6>
    * https://stackoverflow.com/questions/18835833/is-the-book-linkers-and-loaders-by-levine-still-relevant
    * https://linker.iecc.com/
    * https://www.iecc.com/linker/
    * ftp://ftp.iecc.com/pub/linker/
- [[GitHub - snowleopard/build: Build Systems Ã  la Carte|https://github.com/snowleopard/build]]
    * [[Shake Build System|https://shakebuild.com/]]
        + [[Neil Mitchell's Blog (Haskell etc): Reflecting on the Shake Build System|https://neilmitchell.blogspot.com/2021/09/reflecting-on-shake-build-system.html]]
        + [[Neil Mitchell's Blog (Haskell etc): Huge Project Build Systems|http://neilmitchell.blogspot.com/2021/09/huge-project-build-systems.html]]
    * [[GitHub - snowleopard/hadrian: Hadrian: a new build system for the Glasgow Haskell Compiler. Now merged into the GHC tree!|https://github.com/snowleopard/hadrian]]
- [[research!rsc: Our Software Dependency Problem|https://research.swtch.com/deps]]

# C/C++ package management

* [[GitHub - ruslo/hunter|https://github.com/cpp-pm/hunter]]
* [[GitHub - pfultz2/cget: C++ package retrieval|https://github.com/pfultz2/cget]]
* [[GitHub - conan-io/conan: Conan - The open-source C/C++ package manager|https://github.com/conan-io/conan]]
    + [[GitHub - conan-io/conan-center-index: Recipes for the ConanCenter repository|https://github.com/conan-io/conan-center-index]]

# Build systems / environment management

* [[GitHub - bazelbuild/bazel: a fast, scalable, multi-language and extensible build system|https://github.com/bazelbuild/bazel]]
    + [[Starlark Language Â -Â  Bazel|https://bazel.build/rules/language]]
        + https://github.com/bazelbuild/starlark/blob/master/users.md
* [[GitHub - facebook/buck: A fast build system that encourages the creation of small, reusable modules over a variety of platforms and languages.|https://github.com/facebook/buck]]
    + [[Buck: Skylark|https://buck.build/concept/skylark.html]]
    + [[Buck: Macros|https://buck.build/extending/macros.html]]
    + [[The future of Buck|https://developers.facebook.com/blog/post/2021/07/01/future-of-buck/]]
    + [[media.ccc.de -Building Portable Service Images with Buck|https://media.ccc.de/v/ASG2019-143-building-portable-service-images-with-buck]]
        + <https://av.tib.eu/media/46107>
* https://ndmitchell.com/downloads/slides-cheaply_writing_a_fast_interpreter-23_feb_2021.pdf
* https://byby.dev/build-systems
* https://blog.gradle.org/gradle-vs-bazel-jvm
* [[Open-Sourcing Isopod: An Expressive DSL Framework for Kubernetes Configuration - by Charles Xu - Cruise - Medium|https://medium.com/cruise/isopod-5ad7c565d350]]
    + [[Isopod - Proceedings of the ACM Symposium on Cloud Computing|https://dl.acm.org/doi/10.1145/3357223.3365759]]
* [[Clang Static Analyzer|https://clang-analyzer.llvm.org/]]
* [[GitHub - bookingcom/pakket: An Unopinionated Meta-Packaging System|https://github.com/bookingcom/pakket]]
    * [["Pakket - An Unopinionated Meta-Packaging System" - Sawyer X - YouTube|https://www.youtube.com/watch?v=-WBL0QoQ3kw]]
    * [[Sawyer X - "Pakket - An Unopinionated Meta-Packaging System" - YouTube|https://www.youtube.com/watch?v=aiNRbQKX9iU]]
* [[GitHub - fluendo/cerbero|https://github.com/fluendo/cerbero]]
* [[lib/Metabrik/Shell/Command.pm - metacpan.org|https://metacpan.org/source/Metabrik::Shell::Command]]
* [[Pants|https://www.pantsbuild.org/]]
* [[Welcome to the BuildStream project - BuildStream, the software integration tool|https://www.buildstream.build/]]
* [[crossroad Â· PyPI|https://pypi.org/project/crossroad/]]
    + [[(Gimp-developer) crossroad: developer tool for cross-compiling GIMP for|https://mail.gnome.org/archives/gimp-developer-list/2013-October/msg00108.html]]
    + [[Using 'crossroad' to compile Windows versions of G'MIC on Linux - G'MIC - discuss.pixls.us|https://discuss.pixls.us/t/using-crossroad-to-compile-windows-versions-of-gmic-on-linux/20496]]
* Module systems
    + <https://modules.readthedocs.io/en/latest/>
    + <https://lmod.readthedocs.io/en/latest/>
* Cross-compiling /  older libcs
    + https://github.com/billziss-gh/glibc-compat
    + https://git.adelielinux.org/adelie/gcompat/
        + https://blog.adelielinux.org/tag/gcompat/
    + https://dev.to/kristoff/zig-makes-go-cross-compilation-just-work-29ho
    + https://github.com/phusion/holy-build-box

# Debugging / profiling / coverage tools for C/C++

- [[GitHub - google/sanitizers: AddressSanitizer, ThreadSanitizer, MemorySanitizer|https://github.com/google/sanitizers]]
    * [[ThreadSanitizer â€” Clang 12 documentation|https://clang.llvm.org/docs/ThreadSanitizer.html]]
    * [[UndefinedBehaviorSanitizer â€” Clang 12 documentation|https://clang.llvm.org/docs/UndefinedBehaviorSanitizer.html]]
    * [[AddressSanitizer - Wikipedia|https://en.wikipedia.org/wiki/AddressSanitizer]]
    * [[Sanitizer support Â· The Julia Language|https://docs.julialang.org/en/v1/devdocs/sanitizers/]]
    * [[ThreadSanitizer (TSan) v. 2 - The Chromium Projects|https://www.chromium.org/developers/testing/threadsanitizer-tsan-v2]]
- [[Perf Wiki|https://perf.wiki.kernel.org/index.php/Main_Page]]
- [[Gcov (Using the GNU Compiler Collection (GCC))|http://gcc.gnu.org/onlinedocs/gcc/Gcov.html]]
    * [[GitHub - gcovr/gcovr: generate code coverage reports with gcc/gcov|https://github.com/gcovr/gcovr]]
- [[Top (GNU gprof)|http://sourceware.org/binutils/docs/gprof/]]
- [[GitHub - notfoundry/ppstep: Interactive C/C++ preprocessor macro debugger|https://github.com/notfoundry/ppstep]]
- [[linux - is there a tool for finding shared library symbol conflicts? - Unix & Linux Stack Exchange|https://unix.stackexchange.com/questions/594790/is-there-a-tool-for-finding-shared-library-symbol-conflicts]]
    * [[linker - Limiting visibility of symbols when linking shared libraries - Stack Overflow|https://stackoverflow.com/questions/435352/limiting-visibility-of-symbols-when-linking-shared-libraries]]
- [[HowToGetABacktrace - Debian Wiki|https://wiki.debian.org/HowToGetABacktrace]]
    * [[Debuginfod - Debian Wiki|https://wiki.debian.org/Debuginfod]]
    * [[elfutils debuginfod services|https://sourceware.org/elfutils/Debuginfod.html]]
- <https://stackoverflow.com/questions/24284293/recommended-way-to-track-down-array-out-of-bound-access-write-in-c-program>
- https://github.com/dyninst/dyninst
- <https://en.wikipedia.org/wiki/OllyDbg>
- [[DUMPBIN Command Line - Microsoft Learn|https://learn.microsoft.com/en-us/cpp/build/reference/dumpbin-command-line?view=msvc-170]]

# Language Server

- [[LSIF.dev|https://lsif.dev]]
- <https://github.com/neoclide/coc.nvim>
- [[Official page for Language Server Protocol|https://microsoft.github.io/language-server-protocol/]]

# Repository indexes

- [[Repology|https://repology.org/]]
- [[pkgs.org - Packages for Linux and Unix operating systems|https://pkgs.org/]]
- [[Anitya|https://release-monitoring.org]]
    * [[API Documentation â€” Anitya documentation|https://release-monitoring.org/static/docs/api.html]]
- <https://reposcope.com/> â€” seems down?

# Package indexes

- <https://github.com/librariesio/libraries.io/blob/main/docs/add-a-package-manager.md>
    * <https://github.com/librariesio/bibliothecary>

# Parsing / static analysis + API + docs

- [[GitHub - trailofbits/graphtage: A semantic diff utility and library for tree-like files such as JSON, JSON5, XML, HTML, YAML, and CSV.|https://github.com/trailofbits/graphtage]]
- [[GitHub - returntocorp/pfff: pfff is mainly an OCaml API to write static analysis, dynamic analysis, code visualizations, code navigations, or style-preserving source-to-source transformations such as refactorings on source code.|https://github.com/returntocorp/pfff]]
- [[GitHub - returntocorp/semgrep: Lightweight static analysis for many languages. Find bug variants with patterns that look like source code.|https://github.com/returntocorp/semgrep]]
- [[GitHub - returntocorp/ocaml-tree-sitter-semgrep: Generate parsers from tree-sitter grammars extended to support Semgrep patterns|https://github.com/returntocorp/ocaml-tree-sitter-semgrep]]
- [[GitHub - tree-sitter/tree-sitter: An incremental parsing system for programming tools|https://github.com/tree-sitter/tree-sitter]]
- <http://swig.org/>
- <https://www.doxygen.nl/>
- <https://github.com/CastXML/CastXML>
- <https://www.riverbankcomputing.com/software/sip/intro>
- <https://github.com/vapier/coverity-scan-action>


# Tasks

- [[GitHub - melezhik/Sparrow6: Raku Automation Framework|https://github.com/melezhik/Sparrow6]]
- [[GitHub - RexOps/Rex: Rex, the friendly automation framework|https://github.com/RexOps/Rex]]
- [[GitHub - nektos/act: Run your GitHub Actions locally ðŸš€|https://github.com/nektos/act]]
- [[GitHub - casey/just: ðŸ¤– Just a command runner|https://github.com/casey/just]]

# Linking

- [[GitHub - JonathonReinhart/staticx: Create static executable from dynamic executable|https://github.com/JonathonReinhart/staticx]]
- [[GitHub - NixOS/patchelf: A small utility to modify the dynamic linker and RPATH of ELF executables|https://github.com/NixOS/patchelf]]

# Rendering debugging

- <https://github.com/baldurk/renderdoc>
- <https://github.com/google/gapid>
- <https://www.khronos.org/opengl/wiki/Debugging_Tools>
- <https://github.com/ValveSoftware/vogl>
- <https://github.com/apitrace/apitrace>
- <https://github.com/LunarG/VulkanTools>

# VM / JIT

- <https://luajit.org/>
- <https://asmjit.com/>

# Codemeta

- <https://codemeta.github.io/>
- <https://codemeta.github.io/codemetar/>
- <https://github.com/cboettig/codemeta>

# Security

- <https://wiki.debian.org/HardeningWalkthrough>

# Virtualisation

- virt-what
    * <https://people.redhat.com/~rjones/virt-what/>
    * <http://git.annexia.org/?p=virt-what.git;a=summary>
    * <https://github.com/jordemort/virt-what>
- OSes on CI
    * <https://github.com/PDLPorters/devops/issues/1>
    * [[GitHub - vmactions/solaris-vm: Use Solaris in github actions|https://github.com/vmactions/solaris-vm]]
    * [[GitHub - vmactions/freebsd-vm: Use FreeBSD in github actions|https://github.com/vmactions/freebsd-vm]]

# GitHub Actions for specific languages

- Examples: <https://github.com/actions/starter-workflows>
- [[GitHub - 40ants/setup-lisp: GitHub Action to Setup Common Lisp tools|https://github.com/40ants/setup-lisp]]
- [[GitHub - actions/setup-dotnet: Set up your GitHub Actions workflow with a specific version of the .NET core sdk|https://github.com/actions/setup-dotnet]]
- [[GitHub - actions/setup-go: Set up your GitHub Actions workflow with a specific version of Go|https://github.com/actions/setup-go]]
- [[GitHub - actions/setup-java: Set up your GitHub Actions workflow with a specific version of Java|https://github.com/actions/setup-java]]
- [[GitHub - actions/setup-node: Set up your GitHub Actions workflow with a specific version of node.js|https://github.com/actions/setup-node]]
- [[GitHub - actions/setup-python: Set up your GitHub Actions workflow with a specific version of Python|https://github.com/actions/setup-python]]
- [[GitHub - logtalk-actions/setup-swi-prolog: Setup SWI-Prolog action|https://github.com/logtalk-actions/setup-swi-prolog]]
- [[GitHub - r-lib/actions: GitHub Actions for the R community|https://github.com/r-lib/actions]]
- [[GitHub - ruby/setup-ruby: An action to download a prebuilt Ruby and add it to the PATH in 5 seconds|https://github.com/ruby/setup-ruby]]
- [[GitHub - shivammathur/setup-php: GitHub action to set up PHP with extensions, php.ini configuration, coverage drivers, and various tools.|https://github.com/shivammathur/setup-php]]
- [[GitHub - shogo82148/actions-setup-perl: Setup Perl environment Action|https://github.com/shogo82148/actions-setup-perl]]

# Package differences

- <https://github.com/lvc/pkgdiff>
- <http://tardiff.coolprojects.org/>
    * <https://www.tcg.com/blog/experiments_in_/>
    * <http://tardiff.sourceforge.net/>
- <https://invisible-island.net/diffstat/>
- <https://diffoscope.org/>
    * <https://reproducible-builds.org/tools/>

# Runtime environment

- [[schroot â€” codelibre.net|http://www.codelibre.net/schroot/index.html]]
- [[GitHub - containers/bubblewrap: Unprivileged sandboxing tool|https://github.com/containers/bubblewrap]]

# Linters / Tidiers

- https://github.com/houseabsolute/precious
- https://github.com/collab-qa/check-all-the-things
- https://metacpan.org/dist/Code-TidyAll
- https://github.com/caramelomartins/awesome-linters

# REPL
- https://github.com/replit-archive/repl.it
- https://github.com/replit/prybar

# Licenses

- <https://github.com/fossology/fossology>

# Code owners

- <https://metacpan.org/dist/File-Codeowners>
- <https://github.com/toptal/codeowners-checker>
- <https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-code-owners>
- <https://docs.gitlab.com/ee/user/project/code_owners.html>
- <https://codeowners.com/>
- <https://www.fullstory.com/blog/taming-github-codeowners-with-bots/>

# Intel oneAPI

- <https://www.scivision.dev/intel-oneapi-github-actions/>

# HPC workflows

- [[Singularity (software) - Wikipedia|https://en.wikipedia.org/wiki/Singularity_(software)]]
    * [[Home - Apptainer|https://apptainer.org/]]
    * [[GitHub - apptainer/apptainer: Apptainer: Application containers for Linux|https://github.com/apptainer/apptainer]]
    * [[GitHub - sylabs/singularity: SingularityCE is the Community Edition of Singularity, an open source container platform designed to be simple, fast, and secure.|https://github.com/sylabs/singularity]]
        + [[SingularityCE - Sylabs|https://sylabs.io/singularity/]]
        + [[Whatâ€™s in a SingularityCE Release? - Sylabs|https://sylabs.io/2022/05/whats-in-a-singularityce-release/]]
    * [[GitHub - hpcng/warewulf: Warewulf is a stateless and diskless container operating system provisioning system for large clusters of bare metal and/or virtual systems.|https://github.com/hpcng/warewulf]]
        + [[GitHub - warewulf/warewulf3: Warewulf is a scalable systems management suite originally developed to manage large high-performance Linux clusters.|https://github.com/warewulf/warewulf3]]
    * [[Singularity Â· GitHub|https://github.com/singularityware]]
- [[Snakemake documentation|https://snakemake.readthedocs.io/en/stable/]]

# Website debugging

- https://gist.github.com/james2doyle/d552c408f5d3a6af8890914e60db3861
- https://github.com/remy/jsconsole
- https://github.com/google/ios-webkit-debug-proxy
- https://developer.chrome.com/docs/devtools/remote-debugging/
- https://stackoverflow.com/questions/11262236/ios-remote-debugging
- https://medium.com/@nikoloza/how-to-debug-remote-ios-device-using-chrome-devtools-f44d697003a7
- https://people.apache.org/~pmuellr/weinre/docs/latest/Home.html
- http://jonsadka.com/blog/how-to-debug-a-chrome-specific-bug-on-ios-using-remote-debugging
- https://stackoverflow.com/questions/38179396/is-there-any-way-to-debug-chrome-in-any-ios-device
- https://remotedebug.org/roadmap/
    * https://github.com/RemoteDebug/remotedebug-compatibility-tables
- https://inspect.dev/

# Build systems

- [[doc/development/build-tool]]
- [[SCons: A software construction tool - SCons|https://scons.org/]]
- [[Premake|https://premake.github.io/]]
- [[tup - Home|https://gittup.org/tup/]]

# Code coverage

- Cobertura XML format
    * <http://cobertura.github.io/cobertura/>
    * <https://plugins.jenkins.io/cobertura/>
    * <https://gcovr.com/en/stable/output/cobertura.html>
    * <https://www.mathworks.com/help/matlab/ref/matlab.unittest.plugins.codecoverage.coberturaformat-class.html>
    * <https://docs.gitlab.com/ee/user/project/merge_requests/test_coverage_visualization.html>
        + <https://docs.gitlab.com/ee/ci/yaml/artifacts_reports.html#artifactsreportscoverage_report>

# REST APIs

## OpenAPI, JSON Schema

- [[OpenAPI Specification - Swagger|https://swagger.io/specification/]]
- [[OpenAPI Examples Need Help|https://phil.tech/2020/openapi-examples/]]
- [[Creating OpenAPI from HTTP Traffic - APIs You Won't Hate|https://apisyouwonthate.com/blog/creating-openapi-from-http-traffic]]
- [[JSON Schema Bundling Finally Formalised - APIs You Won't Hate|https://apisyouwonthate.com/blog/json-schema-bundling-finally-formalised]]

# System package managers

- <https://paludis.exherbo.org/>

# Regular expressions

- [[regex - Code coverage tools for regexes? - Stack Overflow|https://stackoverflow.com/questions/3645012/code-coverage-tools-for-regexes]]
- [[Rex - Regular Expression Exploration - Microsoft Research|https://www.microsoft.com/en-us/research/project/rex-regular-expression-exploration/]]
- [[Xeger - A Java library for generating random text from regular expressions|https://code.google.com/archive/p/xeger/]]

# Ant JUnit XML

- <https://stackoverflow.com/questions/4922867/what-is-the-junit-xml-format-specification-that-hudson-supports>
- <https://www.ibm.com/docs/en/developer-for-zos/14.1.0?topic=formats-junit-xml-format>
- <https://stackoverflow.com/questions/442556/spec-for-junit-xml-output>
- <http://svn.apache.org/repos/asf/ant/core/trunk/src/main/org/apache/tools/ant/taskdefs/optional/junit/>
- <https://github.com/windyroad/JUnit-Schema/blob/master/JUnit.xsd>

# Software architecture

- <https://arc42.org/>

# Performance visualisation

- [[Flame Graphs|https://www.brendangregg.com/flamegraphs.html]]

# VCS

- <https://porkrind.org/commit-patch/>


# Security

- [[GitHub - mviereck/x11docker: Run GUI applications and desktops in docker and podman containers. Focus on security.|https://github.com/mviereck/x11docker]]
- [[ClamAVNet|https://www.clamav.net/]]
- [[Dependency Confusion: How I Hacked Into Apple, Microsoft and Dozens of Other Companies - by Alex Birsan - Medium|https://medium.com/@alex.birsan/dependency-confusion-4a5d60fec610]]
    * [[Compromised PyTorch-nightly dependency chain between December 25th and December 30th, 2022. - PyTorch|https://pytorch.org/blog/compromised-nightly-dependency/]]
    * https://azure.microsoft.com/en-us/resources/3-ways-to-mitigate-risk-using-private-package-feeds/
    * [[Threat Alert: Private npm Packages Disclosed via Timing Attacks|https://blog.aquasec.com/private-packages-disclosed-via-timing-attack-on-npm]]
    * [[Python Malware Starting to Employ Anti-Debug Techniques|https://jfrog.com/blog/pypi-malware-creators-are-starting-to-employ-anti-debug-techniques/]]
    * [[New Technique Used by Attackers in NPM to Avoid Detection - Checkmarx.com|https://checkmarx.com/blog/new-technique-used-by-attackers-in-npm-to-avoid-detection/]]
- [[Language-theoretic Security|http://langsec.org/]]
